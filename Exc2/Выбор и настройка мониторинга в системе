Мотивация:
    Наблюдаемость системы является ключевым фактором для принятия любых решений о её изменении - 
            только при достаточном количестве информации о конкретных технических проблемах имеется
            возможность адекватной реакции на происходящие изменения, а так же заложить в систему 
            увеличение количества ее пользователей(в разрезе бизнеса - увеличение как B2C, так и B2B клиентов). 
        Сразу после появления метрик появится возможность проверить сформированные гипотезы об источниках
            проблем в системе. 
        После внедрения трейсинга появится возможность решить уже существующие как B2B, так и B2C проблемы с восстановлением
            цепочки состояний заказа и поиска источника задержек его обработки. При обнаружении как технических, так и
            нетехнических проблем появится возможность отреагировать на них - как улучшением системы, так и административно. 

Выбор подхода к мониторингу:
    MES: Четыре золотых сигнала
        Сервис сейчас является комбинацией функций для внешних клиентов, сотрудников, но также предоставляет 
            общую для всей системы услугу - расчет стоимости заказа. В таком состоянии сервиса нам необходимо отслеживать
            как клиентские вызовы, так и "Насыщенность" системы - большая нагрузка на сервис как ухудшает клиентский опыт,
            так и замедляет общую задержку системы.
        список метрик:
            Number of requests (RPS) for MES API - определяет внешнюю нагрузку на систему
            Number of requests (RPS) per user for MES API - позволяет выделить недобросовестных пользователей
            CPU % for MES API - покажет, насколько сервису хватает вычислительных мощностей на все возложенные на него обязанности
            Memory Utilisation for MES API - покажет, насколько сервису хватает вычислительных мощностей на все возложенные на него обязанности
            Response time (latency) for MES API - позволит увидеть изменения в среднем времени ответа для пользователя.
                с ее помощью можно понять, в правильном ли направлении движется система в своем изменении
            Number of HTTP 500 for MES API - позволит вовремя реагировать на ошибки, с которыми столкнутся пользователи
            Number of simultanious sessions for MES API - позволит сформировать стратегию масштабирования системы
            Kb tranferred (received) for MES API - позволит сформировать стратегию масштабирования системы
            Kb provided (sent) for MES API - позволит сформировать стратегию масштабирования системы
    CRM: RED
        CRM является типичным веб-приложением, где нам необходимо заботиться об опыте использования
            системы пользователем. Сам по себе сервис не предлагает каких-то нестандартных функций, поэтому базовых метрик
            будет достаточно.  
        список метрик:
            Number of requests (RPS) for CRM API - определяет внешнюю нагрузку на систему
            Number of requests (RPS) per user for CRM API - позволяет выделить недобросовестных пользователей
            CPU % for CRM API - стандартные метрики серверов
            Memory Utilisation for CRM API - стандартные метрики серверов
            Response time (latency) for CRM API - позволит увидеть изменения в среднем времени ответа для пользователя.
            Number of HTTP 200 for CRM API - поможет выделить соотношение успешных к неуспешным запросам для понимания работы системы
            Number of HTTP 500 for CRM API - поможет выделить соотношение успешных к неуспешным запросам для понимания работы системы
            Number of simultanious sessions for CRM API - позволит сформировать стратегию масштабирования системы
        
    Internet Shop: RED
        Интернет-магазин является типичным веб-приложением, где нам необходимо заботиться об опыте использования
            системы пользователем. Сам по себе сервис не предлагает каких-то нестандартных функций, поэтому базовых метрик
            будет достаточно.
        список метрик:
            Number of requests (RPS) for internet shop API - определяет внешнюю нагрузку на систему
            Number of requests (RPS) per user for internet shop API - позволяет выделить недобросовестных пользователей
            CPU % for internet shop API - стандартные метрики серверов
            Memory Utilisation for internet shop API - стандартные метрики серверов
            Response time (latency) for internet shop API - позволит увидеть изменения в среднем времени ответа для пользователя.
            Number of HTTP 200 for internet shop API - поможет выделить соотношение успешных к неуспешным запросам для понимания работы системы
            Number of HTTP 500 for internet shop API - поможет выделить соотношение успешных к неуспешным запросам для понимания работы системы
            Number of simultanious sessions for internet shop API - позволит сформировать стратегию масштабирования системы
            Kb tranferred (received) for internet shop API - позволит сформировать стратегию масштабирования системы
            Kb provided (sent) for internet shop API - позволит сформировать стратегию масштабирования системы

    RabbitMQ:
        список метрик:
            нужны все базовые метрики - CPU, RAM
            Number of dead-letter-exchange letters in RabbitMQ (labels: queue_name) - смотреть, сколько записей не получилось обработать
            Number of message in flight in RabbitMQ (labels: queue_name) - смотреть общую нагрузку брокера
    
    S3:
        список метрик:
            Size of S3 storage - следить за используемым объемом диска
            Size of S3 bucket (labels: bucket_name) - следить за разрастанием конкертных бакетов

    базы данных:
        список метрик:
            нужны все базовые метрики - CPU, RAM
            нужны все специфичные для БД метрики - запросы, транзакции, длительность запросов, топ запросов, блокировки, кэшмисс

План действий:
    создать сервер prometheus
    добавить prometheus-metrics-exporter-pushgateway библиотеки во все разрабатываемые приложения
    поднять prometheus-экспортеры для чужих приложений: базы данных, брокер, s3
    создать сервер jaeger
    сконфигурировать сервисы на обработку трейсов для jaeger
    создать сервер elasticsearch
    создать сервер kibana
    поднять logstash экспортеры
    создать сервер grafana
    настроить датасор